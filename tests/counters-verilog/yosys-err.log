
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+133 (git sha1 fa9e3405, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Running command `read_verilog -sv /home/makai/repos/CoSA/tests/counters-verilog/Counters.v; prep -top Counters; hierarchy -check; memory -nomap; flatten;; clk2fflogic;; setundef -undriven -anyseq; write_btor __yosys_verilog__.btor2' --

1. Executing Verilog-2005 frontend.
Parsing SystemVerilog input from `/home/makai/repos/CoSA/tests/counters-verilog/Counters.v' to AST representation.
Generating RTLIL representation for module `\Counters'.
Warning: reg '\init1' is assigned in a continuous assignment at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:16.
Warning: reg '\init2' is assigned in a continuous assignment at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:17.
Generating RTLIL representation for module `\Counter'.
Warning: wire '\out' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:34.
Warning: wire '\out' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:39.
Warning: wire '\out' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:41.
Generating RTLIL representation for module `\Adder'.
Generating RTLIL representation for module `\Reset'.
Warning: wire '\rst' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:69.
Warning: wire '\rst' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:70.
Warning: wire '\rst' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:74.
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \Counters
Used module:     \Reset
Used module:     \Adder
Used module:     \Counter

2.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\Reset'.
Parameter \SIZE = 8
Generating RTLIL representation for module `$paramod\Reset\SIZE=8'.
Warning: wire '\rst' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:69.
Warning: wire '\rst' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:70.
Warning: wire '\rst' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:74.

2.1.3. Executing AST frontend in derive mode using pre-parsed AST for module `\Adder'.
Parameter \SIZE = 8
Generating RTLIL representation for module `$paramod\Adder\SIZE=8'.

2.1.4. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \SIZE = 8
Generating RTLIL representation for module `$paramod\Counter\SIZE=8'.
Warning: wire '\out' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:34.
Warning: wire '\out' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:39.
Warning: wire '\out' is assigned in a block at /home/makai/repos/CoSA/tests/counters-verilog/Counters.v:41.

2.1.5. Executing AST frontend in derive mode using pre-parsed AST for module `\Counter'.
Parameter \SIZE = 8
Found cached RTLIL representation for module `$paramod\Counter\SIZE=8'.

2.1.6. Analyzing design hierarchy..
Top module:  \Counters
Used module:     $paramod\Reset\SIZE=8
Used module:     $paramod\Adder\SIZE=8
Used module:     $paramod\Counter\SIZE=8

2.1.7. Analyzing design hierarchy..
Top module:  \Counters
Used module:     $paramod\Reset\SIZE=8
Used module:     $paramod\Adder\SIZE=8
Used module:     $paramod\Counter\SIZE=8
Removing unused module `\Reset'.
Removing unused module `\Adder'.
Removing unused module `\Counter'.
Removed 3 unused modules.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\Counter\SIZE=8.$proc$/home/makai/repos/CoSA/tests/counters-verilog/Counters.v:34$12'.
  Set init value: \out = 8'00000000

2.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `$paramod\Counter\SIZE=8.$proc$/home/makai/repos/CoSA/tests/counters-verilog/Counters.v:36$10'.

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\Counter\SIZE=8.$proc$/home/makai/repos/CoSA/tests/counters-verilog/Counters.v:34$12'.
     1/1: $1\out[7:0]
Creating decoders for process `$paramod\Counter\SIZE=8.$proc$/home/makai/repos/CoSA/tests/counters-verilog/Counters.v:36$10'.
     1/1: $0\out[7:0]
Creating decoders for process `$paramod\Reset\SIZE=8.$proc$/home/makai/repos/CoSA/tests/counters-verilog/Counters.v:66$7'.
     1/2: $1\rst[0:0]
     2/2: $0\rst[0:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\Counter\SIZE=8.\out' using process `$paramod\Counter\SIZE=8.$proc$/home/makai/repos/CoSA/tests/counters-verilog/Counters.v:36$10'.
Warning: Async reset value `\initval' is not constant!
ERROR: Multiple edge sensitive events found for this signal!
