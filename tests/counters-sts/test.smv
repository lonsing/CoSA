MODULE main

VAR
"init1" : word[8];
"init2" : word[8];
"counter_1.out" : word[8];
"counter_1.clk" : word[1];
"counter_1.rst" : word[1];
"counter_1.initval" : word[8];
"counter_2.out" : word[8];
"counter_2.clk" : word[1];
"counter_2.rst" : word[1];
"counter_2.initval" : word[8];
"adder.out" : word[8];
"adder.in1" : word[8];
"adder.in2" : word[8];
"fifo_1.cell_0" : word[8];
"fifo_1.cell_1" : word[8];
"fifo_1.cell_2" : word[8];
"fifo_1.cell_3" : word[8];
"fifo_1.cell_4" : word[8];
"fifo_1.cell_5" : word[8];
"cell_0" : word[8];
"cell_1" : word[8];
"cell_2" : word[8];
"cell_3" : word[8];
"cell_4" : word[8];
"cell_5" : word[8];
"input" : word[8];
"clk1" : word[1];
"clk2" : word[1];
"rst" : word[1];
"output" : word[8];
"out" : word[8];
"counter_1.fifo_1.cell_1" : word[8];
"counter_1.fifo_1.cell_2" : word[8];
"counter_1.fifo_1.cell_3" : word[8];
"counter_1.fifo_1.cell_4" : word[8];
"counter_1.fifo_1.cell_5" : word[8];
"counter_1.cell_0" : word[8];
"counter_1.cell_1" : word[8];
"counter_1.cell_2" : word[8];
"counter_1.cell_3" : word[8];
"counter_1.cell_4" : word[8];
"counter_1.cell_5" : word[8];
"counter_1.input" : word[8];
"counter_1.clk1" : word[1];
"counter_1.clk2" : word[1];
"counter_1.output" : word[8];
"counter_1.fifo_1.cell_0" : word[8];
"counter_2.fifo_1.cell_1" : word[8];
"counter_2.fifo_1.cell_2" : word[8];
"counter_2.fifo_1.cell_3" : word[8];
"counter_2.fifo_1.cell_4" : word[8];
"counter_2.fifo_1.cell_5" : word[8];
"counter_2.cell_0" : word[8];
"counter_2.cell_1" : word[8];
"counter_2.cell_2" : word[8];
"counter_2.cell_3" : word[8];
"counter_2.cell_4" : word[8];
"counter_2.cell_5" : word[8];
"counter_2.input" : word[8];
"counter_2.clk1" : word[1];
"counter_2.clk2" : word[1];
"counter_2.output" : word[8];
"counter_2.fifo_1.cell_0" : word[8];
"adder.fifo_1.cell_0" : word[8];
"adder.fifo_1.cell_1" : word[8];
"adder.fifo_1.cell_2" : word[8];
"adder.fifo_1.cell_3" : word[8];
"adder.fifo_1.cell_4" : word[8];
"adder.fifo_1.cell_5" : word[8];
"adder.cell_0" : word[8];
"adder.cell_1" : word[8];
"adder.cell_2" : word[8];
"adder.cell_3" : word[8];
"adder.cell_4" : word[8];
"adder.cell_5" : word[8];
"adder.input" : word[8];
"adder.clk1" : word[1];
"adder.clk2" : word[1];
"adder.rst" : word[1];
"adder.output" : word[8];

INIT
TRUE &
("counter_2.out" = 0ud8_0) &
("counter_1.out" = 0ud8_0) &
("clk2" = 0ud1_1) &
("clk1" = 0ud1_0);

INVAR
TRUE &
("counter_2.initval" = "init2") &
("counter_2.rst" = "rst") &
("counter_2.clk" = "clk2") &
("adder.in2" = "counter_2.out") &
("adder.in1" = "counter_1.out") &
("counter_1.initval" = "init1") &
("counter_1.rst" = "rst") &
("counter_1.clk" = "clk1") &
("adder.out" = ("adder.in1" + "adder.in2")) &
("init2" = 0ud8_2) &
("init1" = 0ud8_0) &
("out" = "adder.out");

TRANS
TRUE &
(((next("counter_2.rst") = 0ud1_1) & ("counter_2.rst" = 0ud1_0)) -> (next("counter_2.out") = "counter_2.initval")) &
(((next("counter_2.clk") = 0ud1_0) & ("counter_2.clk" = 0ud1_1) & (! ((next("counter_2.rst") = 0ud1_1) & ("counter_2.rst" = 0ud1_0)))) -> (next("counter_2.out") = "counter_2.out")) &
((("counter_2.clk" = 0ud1_0) & (! ((next("counter_2.rst") = 0ud1_1) & ("counter_2.rst" = 0ud1_0))) & (next("counter_2.clk") = 0ud1_1)) -> (next("counter_2.out") = ("counter_2.out" + 0ud8_1))) &
(((next("counter_1.rst") = 0ud1_1) & ("counter_1.rst" = 0ud1_0)) -> (next("counter_1.out") = "counter_1.initval")) &
(((! ((next("counter_1.rst") = 0ud1_1) & ("counter_1.rst" = 0ud1_0))) & (next("counter_1.clk") = 0ud1_0) & ("counter_1.clk" = 0ud1_1)) -> (next("counter_1.out") = "counter_1.out")) &
(((! ((next("counter_1.rst") = 0ud1_1) & ("counter_1.rst" = 0ud1_0))) & (next("counter_1.clk") = 0ud1_1) & ("counter_1.clk" = 0ud1_0)) -> (next("counter_1.out") = ("counter_1.out" + 0ud8_1))) &
(("out" <= 0ud8_10) -> ("rst" = 0ud1_0)) &
((0ud8_10 < "out") -> (("rst" = 0ud1_0) & (next("rst") = 0ud1_1))) &
(("clk2" = 0ud1_0) <-> (next("clk2") = 0ud1_1)) &
(("clk1" = 0ud1_0) <-> (next("clk1") = 0ud1_1));
